@model InOutStatus.Models.UserStatus

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>UserStatus</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.WorkStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.WorkStatus,
			   new List<SelectListItem>()
		   {
			   new SelectListItem() { Text="In", Value="In"},
			   new SelectListItem() { Text="Out", Value="Out"},
			   new SelectListItem() { Text="Lunch", Value="Lunch"}

		   },
		   htmlAttributes: new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.WorkStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-3">
				@Html.DropDownListFor(model => model.Location,
							  new List<SelectListItem>()
						  {
							  new SelectListItem() { Text="Bracebridge", Value="Bracebridge"},
							  new SelectListItem() { Text="Huntsville", Value="Huntsville"},
							  new SelectListItem() { Text="Home Office", Value="Home Office"}

						  },
						  htmlAttributes: new { @class = "form-control" })         
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
					</div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuickSet, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-3">
				@Html.DropDownListFor(model => model.QuickSet,
											  new List<SelectListItem>()
										  {
											  new SelectListItem() { Text="15 Min", Value="15 Min"},
											  new SelectListItem() { Text="30 min", Value="30 min"},
											  new SelectListItem() { Text="1 Hour", Value="1 Hour"},
											  new SelectListItem() { Text="2 Hours", Value="2 Hours"},
                                  		      new SelectListItem() { Text="3 Hour", Value="3 Hour"},
											  new SelectListItem() { Text="Done for the day", Value="Done for the day"}


										  },
										  htmlAttributes: new { @class = "form-control" })                 @Html.ValidationMessageFor(model => model.QuickSet, "", new { @class = "text-danger" })
									</div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
